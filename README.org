* Required C++ Libraries: 
listed as name, version currently in use on my
development machine, website, and a short description.
I tend to update the installed libraries semi-consistently.


** [[http://www.hdfgroup.org/downloads/index.html][hdf5 (1.8.5)]]
   - Used to store particle locations
   - set HDF5_ROOT in CMakeLists.txt to point to location if in
     non-standard location
   - own license, but very permissive

** [[http://freeimage.sourceforge.net/][freeimage]]
   - (CVS version)
   - Used to get image data out of *.tif
   - set FREEIMAGE_ROOT in iden/CMakeLists.txt if in non-standard location.
   - GPL or commercial, used with commercial license to play nice with IPP

** [[http://software.intel.com/en-us/intel-ipp/][IPP (5.3.4.080)]]
   - Used to process images
   - set IPP_ROOT in iden/CMakeLists.txt if in non-standard location.
   - Closed license, I can not distribute the header, 
     - can't link against non-exempted GPL code
     - ok against apache, hdf, and free image commercial 
   

** [[http://xerces.apache.org/xerces-c/][xerces (3.0.1)]]
  - Used for parsing xml paramter files
  - set XERCESC_ROOT in CMakeLists.txt if in non-standard location.
  - Apache 2.0, kosher to pull into GPL project, kosher to link against IPP

** [[http://www.boost.org/][Boost::date_time]] (from debian stable) 
 - Used to parse dates
 - if not in standard location, set BOOST_ROOT
 - super permissive license 

** [[http://www.sqlite.org/][sqlite (3.7.3)]]
  - used to talk to the database of data sets and computations
  - public domain

* Required python modules:
 - h5py (svn version) http://code.google.com/p/h5py/
 - Numpy
 - scipy 
 - PIL



* Required External Programs
** [[http://www.cmake.org/][Cmake]]
 - build system
 - more recent the version, the better
 - need to patch and build from source if you want to compile mex file
   (see Matlab below)

** GNU compiler
 - I do not think I use any GNU extension.
 - if you want to compile the =mex= functions, the version needs to
   match what your version of matlab was compiled with.

** [[http://git-scm.com/][git]]
 - Version control software
 - any version should do



* optional External Programs
** [[http://www.swig.org/][SWIG]]
 - generates python wrappers

** [[http://www.stack.nl/~dimitri/doxygen/][doxygen]]
 - used to generate [[http://jfi.uchicago.edu/~tcaswell/track_doc/][documentation]]

* Compile
Assumes that the source is in =SOURCE_PATH= and is being built in
=BUILD_PATH= which is a different directory.  


The =-DCMAKE_BUILD_TYPE= option controls the compiler flags.  Useful options are
=Release= and  =Debug= [[http://www.cmake.org/Wiki/CMake_Useful_Variables][(doc)]].



** basic
This will build a collection of analysis programs, two libraries 

In =BUILD_DIR=:


:    cmake SOURCE_PATH -DCMAKE_BUILD_TYPE=Release


** Iden
This builds two programs, =Iden= and =Iden_avg=, for finding features.
=Iden_avg= averages frames together before finding particles.

In =BUILD_PATH=:


:   cmake SOURCE_PATH -DCOMPILE_IDEN=1 -DCMAKE_BUILD_TYPE=Release 


** testing
This compiles a collection of badly documented test programs that may
or may not test anything useful.  This might get cleaned up some day,
but it is not high on the to-do list.

** Matlab
This will build a collection of matlab mex files.  I do not use these
regularly and they may not compile, and if they do may be broken.

In BUILD_DIR:


:    CC=mex CXX=mex cmake MATLAB_MEX_FILE=1 SOURCE_PATH


Note that this sets environment variables before calling cmake.  This
requires a patch to cmake
(http://public.kitware.com/Bug/view.php?id=9240) to work properly.
Also see http://www.vtk.org/Wiki/CMake:MatlabMex


* Install
I don't do anything fancy to install at this point.  Either run the
binaries out of the build directory or manually copy them into your
path.

For the python wrappers to work properly 

:_rel_path,_dbg_path

in SOURCE_PATH/script_src/python/trackpy/cpp_wrapper.py
need to point to BUILD_PATH/apps.
